AWSTemplateFormatVersion: "2010-09-09"
Description: "Sets up xray database user"
Parameters:
  DatabaseUser:
    Type: String
  DatabasePassword:
    Type: String
    NoEcho: 'true'
  XrayDatabaseUser:
    Type: String
  XrayDatabasePassword:
    Type: String
    NoEcho: 'true'
  XrayMasterDatabaseUrl:
    Type: String
  QSS3BucketName:
    Type: String
  QSS3KeyPrefix:
    Type: String
  SecurityGroup:
    Type: String
  PrivateSubnet1ID:
    Type: String
  # KubeManifestLambdaArn:
  #   Type: String
  EksClusterName:
    Type: String
Resources:
  NameSpace:
    Type: "Custom::KubeManifest"
    Version: '1.0'
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${EksClusterName}"
      ClusterName: !Ref EksClusterName
      # ServiceToken: !Ref KubeManifestLambdaArn
      # ClusterName: !Ref EksClusterName
      Manifest:
        kind: Namespace
        apiVersion: v1
        metadata:
          name: xray
          labels:
            app: xray
  XrayLambdaRole:
      Type: 'AWS::IAM::Role'
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Statement:
            - Action:
                - 'sts:AssumeRole'
              Principal:
                Service:
                  - ec2.amazonaws.com
                  - rds.amazonaws.com
                  - lambda.amazonaws.com
              Effect: Allow
          Version: 2012-10-17
        Policies:
        - PolicyName: XrayLambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:CreateNetworkInterface"
                - "ec2:DeleteNetworkInterface"
                - "ec2:DescribeInstances"
                - "ec2:AttachNetworkInterface"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
                - "logs:CreateLogGroup"
                - "xray:PutTraceSegments"
                - "xray:PutTelemetryRecords"
              Resource: "*"
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Handler: handler.handler
      Role: !GetAtt XrayLambdaRole.Arn
      Code:
        S3Bucket: !Ref QSS3BucketName
        S3Key: !Sub "${QSS3KeyPrefix}functions/packages/JFrogLambda/lambda.zip"
      Runtime: python3.7
      Timeout: 60
      Description: Lambda function to setup XrayDB.
      TracingConfig:
        Mode: Active
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1ID
  LambdaInvoke:
    Type: Custom::JFrogLambda
    DependsOn: Function
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt Function.Arn
      DatabasePassword: !Ref DatabasePassword
      DatabaseUser: !Ref DatabaseUser
      XrayDatabasePassword: !Ref XrayDatabasePassword
      XrayDatabaseUser: !Ref XrayDatabaseUser
      XrayMasterDatabaseUrl: !Ref XrayMasterDatabaseUrl